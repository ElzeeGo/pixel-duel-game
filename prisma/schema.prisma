// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  username      String       @unique
  email         String?      @unique
  passwordHash  String?
  pointsBalance Int          @default(10)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  characters    Character[]
  sentBattles   Battle[]     @relation("Challenger")
  receivedBattles Battle[]   @relation("Challenged")
  transactions  Transaction[]
}

model Character {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  spriteData  String   // JSON string containing sprite details
  country     String   // Determines character class
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  battles     Battle[] @relation("CharacterBattles")
}

model Battle {
  id              String    @id @default(cuid())
  challengerId    String
  challenger      User      @relation("Challenger", fields: [challengerId], references: [id])
  challengedId    String
  challenged      User      @relation("Challenged", fields: [challengedId], references: [id])
  characterId     String?
  character       Character? @relation("CharacterBattles", fields: [characterId], references: [id])
  stake           Int
  status          String    // PENDING, ACCEPTED, REJECTED, COMPLETED
  winnerId        String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  amount      Int
  type        String   // CHARACTER_CREATION, DUEL_STAKE, DUEL_REWARD
  description String?
  createdAt   DateTime @default(now())
}
